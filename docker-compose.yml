version: '3.8'

services:
  # AI Ride Booking Application
  ai-ride-booking:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-ride-booking-app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=false
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - SESSION_TTL=3600
    env_file:
      - .env
    depends_on:
      - redis
    volumes:
      - ./logs:/app/logs
      - audio_files:/tmp/audio
    networks:
      - ai-ride-booking-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for session management
  redis:
    image: redis:7-alpine
    container_name: ai-ride-booking-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-ride-booking-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: ai-ride-booking-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/ssl:/etc/nginx/ssl:ro
      - audio_files:/var/www/audio:ro
    depends_on:
      - ai-ride-booking
    networks:
      - ai-ride-booking-network
    restart: unless-stopped

# Volumes for persistent data
volumes:
  redis_data:
    driver: local
  audio_files:
    driver: local

# Networks
networks:
  ai-ride-booking-network:
    driver: bridge